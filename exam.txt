..\..\..\goexam.exe -i 01dispatch.bat
exit

title: 处理机调度


[进程组织方式]

#原语的特征: 执行必须一气呵成不能中断

#进程之间的结构: 树结构

#链式方式<了解>: 执行指针、就绪队列指针、阻塞队列指针, 不同的指针指向的"PCB链表"表示不同的状态
通常会把优先级高的进程放在队列头部
根据阻塞原因的不同, 阻塞队列指针还分为各种设备或类型的阻塞指针

#索引方式<了解>: 操作系统建立索引表

#进程的组织方式<了解>: 链式方式, 索引方式

#进程等待事件发生时内核程序的工作: 设置PCB的state, PCB从阻塞队列放到就绪队列

#原语实现: 通过关中断、开中断特权指令实现


[进程阻塞与唤醒]

#进程的唤醒: 等待的事件发生, 由什么事件阻塞就由什么事件唤醒

#进程阻塞-过程: 阻塞原语
找到PCB -> 保护现场 -> 设置为阻塞状态 -> 插入等待队列

#进程阻塞-事件: 等待系统分配某种资源, 等待其他协作进程完成工作

#进程唤醒-过程:
找到PCB -> 设置为就绪态 -> 插入就绪队列


[进程切换]

#引起切换的事件:
当前进程主动阻塞
当前进程终止
当前进程时间片到
有优先级更高的进程到达

#进程切换: 切换原语
PCB -> 运行环境信息存入PCB中 -> PCB移入相应队列 -> 选择另外一个PCB, 更新PCB -> 恢复选择的PCB所需的运行环境 -> 执行

#保存运行环境: 保存寄存器中的所有信息

#实现进程并发执行的关键技术: 运行环境的保存和恢复


[进程创建]

#进程创建-事件的发生:
用户登录
作业调度
提供服务(用户向操作系统提出请求的时候会新建一个进程进行处理)
应用请求(用户进程创建子进程)

#进程创建-过程: 使用创建原语
申请空白PCB, "父进程"或"操作系统"为新进程分配除CPU以外的资源, 初始化PCB, 将PCB插入就绪队列
pcb := New(PCB) -> Res(&pcb) -> Init(&pcb) -> Ready(&pcb)


[进程撤销]

#子进程的撤销过程, A(B(D),C):
这里的Res包括分配到的除CPU以外的资源和PCB
@img:进程释放过程.jpg

#进程撤销-过程: 使用撤销原语
从PCB集合中找到要终止的PCB, 若进程正在运行则剥夺CPU使用权限, 终止所有子进程, 将所有资源归还给父进程或操作系统, 删除PCB
Kill(){ PCB := Find(id) -> ReleaseCPU(&pcb) -> Kill(&pcb.Sub) -> ReleaseRes(&pcb) -> Delete(&pcb) }

#进程撤销-事件:
正常结束(ex: exit)
异常结束(ex: 1/0)
外界干预(ex: C-A-delete)

